#import "64spec/lib/64spec.asm"
#import "common/lib/mem-global.asm"
#import "common/lib/invoke-global.asm"

sfspec: init_spec()

  describe("_t2_decodeColorRight")

  it("even column for 0,0"); {
    //beforeTest()
    // given
    // when
    //jsr _t2_decodeColorRight
    // then
    assert_bytes_equal 1000: testScreenData: expectedColorRam1
  }

finish_spec()

testScreenData: {
  .fill 1000, 0
}

expectedColorRam1: {
  //    "0000011111222223333344444555556666677777"
  .text "........................................"
  .text "......................................."; .byte 11
  .text "......................................."; .byte 11
  .text "......................................."; .byte 12
  .text "......................................."; .byte 12
  .text "......................................."; .byte 13
  .text "......................................."; .byte 13
  .text "......................................."; .byte 10
  .text "......................................."; .byte 10
  .text "......................................."; .byte 11
  .text "......................................."; .byte 11
  .text "......................................."; .byte 11
  .text "......................................."; .byte 11
  .text "......................................."; .byte 11
  .text "......................................."; .byte 11
  .text "......................................."; .byte 11
  .text "......................................."; .byte 11
  .text "......................................."; .byte 11
  .text "......................................."; .byte 11
  .text "......................................."; .byte 11
  .text "......................................."; .byte 11
  .text "......................................."; .byte 11
  .text "......................................."; .byte 11
  .text "........................................"
  .text "........................................"
}
